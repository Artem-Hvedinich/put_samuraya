{"version":3,"file":"static/js/136.5c03f9c6.chunk.js","mappings":"6JACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,2B,mBCc3G,EAXmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UAEI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCAtC,EAPiB,SAACN,GACd,OACI,gBAAKG,UAAWC,EAAAA,QAAhB,SAA4BJ,EAAMO,Y,2DCgB7BC,GAAsBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,kBAA/BD,EAb+B,SAACT,GAE/D,OACI,kBAAMW,SAAUX,EAAMY,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOP,KAAK,iBACLQ,UAAWC,EAAAA,GAAUC,YAAY,uBACxC,0BACI,6C,UCoBhB,EAxBgB,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,OACRC,GAAeC,EAAAA,EAAAA,KAA2C,SAAAf,GAAC,OAAIA,EAAEc,gBACjEE,GAAWC,EAAAA,EAAAA,MAMjB,OAAKJ,GAIE,iBAAKd,UAAWC,EAAAA,QAAhB,WACH,gBAAKD,UAAWC,EAAAA,aAAhB,SACKc,EAAaI,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAuBtB,GAAIsB,EAAEtB,GAAII,KAAMkB,EAAElB,MAAxBkB,EAAEtB,UAEtD,iBAAKC,UAAWC,EAAAA,SAAhB,WACI,yBAAMc,EAAaX,SAASgB,KAAI,SAAAE,GAAC,OAAI,SAACC,EAAD,CAAqBxB,GAAIuB,EAAEvB,GAAIK,SAAUkB,EAAEE,SAA5BF,EAAEvB,UACtD,0BACI,SAACM,EAAD,CAAqBG,SAfb,SAACiB,GACjBR,GAASS,EAAAA,EAAAA,GAAmB,CAACC,eAAgBF,EAAME,8BAI5C,SAAC,KAAD,CAAUzB,GAAI0B,EAAAA,EAAAA","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddNewMessage.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__kdR9f\",\"dialogsItems\":\"Dialogs_dialogsItems__qQ02F\",\"messages\":\"Dialogs_messages__55Guq\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props: any) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            {/*<img src=\"https://cdn3.iconfinder.com/data/icons/avatars-round-flat/33/avat-01-512.png\"/>*/}\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Messages = (props: any) => {\r\n    return (\r\n        <div className={s.message}>{props.messages}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Messages","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormControls\";\r\n\r\ntype FromDataType = {\r\n    newMessageBody: string\r\n\r\n}\r\nconst AddMessageForm: React.FC<InjectedFormProps<FromDataType>> = (props: any) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='newMessageBody'\r\n                   component={Textarea} placeholder='Enter You Message'/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm<FromDataType>({form: 'addMessageForm'})(AddMessageForm)","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Message/Message\";\r\nimport {MessagePageType, sendMessageCreator} from \"../../redax/dialogsReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redax/reduxStore\";\r\nimport {AddMessageFormRedux} from \"./AddNewMessage\";\r\nimport {PATH} from \"../RoutesWrapper/RoutersWrapper\";\r\n\r\nconst Dialogs = ({isAuth}: { isAuth: boolean }) => {\r\n    const messagesPage = useSelector<AppStoreType, MessagePageType>(s => s.messagesPage)\r\n    const dispatch = useDispatch()\r\n\r\n    let addNewMessage = (value: any) => {\r\n        dispatch(sendMessageCreator({newMessageBody: value.newMessageBody}))\r\n    }\r\n\r\n    if (!isAuth)\r\n        return <Navigate to={PATH.Login}/>\r\n\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n            {messagesPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)}\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesPage.messages.map(m => <Messages key={m.id} id={m.id} messages={m.message}/>)}</div>\r\n            <div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}\r\nexport default Dialogs\r\n"],"names":["props","path","id","className","s","to","name","messages","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","isAuth","messagesPage","useSelector","dispatch","useDispatch","dialogs","map","d","m","Message","message","value","sendMessageCreator","newMessageBody","PATH"],"sourceRoot":""}